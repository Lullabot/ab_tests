name: Tests
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  testing:
    name: Drupal ${{ matrix.drupal-core }} - PHP ${{ matrix.php-versions }}
    runs-on: ubuntu-latest
    services:
      # Set up MySQL for Drupal installation
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: drupal
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      # Set up Chrome for JavaScript tests
      chrome:
        image: selenium/standalone-chrome:latest
        ports:
          - 4444:4444
        options: --health-cmd="/opt/bin/check-grid.sh" --health-interval=10s --health-timeout=5s --health-retries=3

    strategy:
      fail-fast: false
      matrix:
        drupal-core: ['10.4.x', '11.0.x']
        php-versions: ['8.3']
    steps:
      - name: Checkout Drupal core
        uses: actions/checkout@v4
        with:
          repository: drupal/drupal
          ref: ${{ matrix.drupal-core }}

      - name: Checkout module
        uses: actions/checkout@v4
        with:
          path: modules/ab_tests

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, xml, gd, opcache, mysql
          coverage: none

      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Drupal core dependencies
        run: |
          composer --no-interaction --no-progress --prefer-dist --optimize-autoloader install
#
#      - name: Install module dependencies
#        run: |
#          composer --no-interaction --no-progress require \
#            drupal/my-dependeny

      - name: Install Coder module
        run: |
          composer --dev --no-interaction --no-progress require \
            drupal/coder:^8

      - name: Check coding standards
        run: |
          ./vendor/bin/phpcs --standard=Drupal,DrupalPractice --extensions=php,module,install modules/ab_tests

      - name: Setup web server
        run: |
          php -S 127.0.0.1:8080 -t . >/dev/null 2>&1 &
          echo "::set-output name=pid::$!"
        id: server

      - name: Install Drupal
        run: |
          cp modules/ab_tests/phpunit.xml ./phpunit.xml
          php ./core/scripts/drupal install --db-url=mysql://root:root@127.0.0.1/drupal

      - name: Run Unit Tests
        run: |
          SIMPLETEST_BASE_URL=http://127.0.0.1:8080 SIMPLETEST_DB=mysql://root:root@127.0.0.1/drupal ./vendor/bin/phpunit -c phpunit.xml --testsuite=unit modules/ab_tests

      - name: Run Kernel Tests
        run: |
          SIMPLETEST_BASE_URL=http://127.0.0.1:8080 SIMPLETEST_DB=mysql://root:root@127.0.0.1/drupal ./vendor/bin/phpunit -c phpunit.xml --testsuite=kernel modules/ab_tests

      - name: Run Functional Tests
        run: |
          SIMPLETEST_BASE_URL=http://127.0.0.1:8080 SIMPLETEST_DB=mysql://root:root@127.0.0.1/drupal ./vendor/bin/phpunit -c phpunit.xml --testsuite=functional modules/ab_tests

      - name: Run Functional JavaScript Tests
        run: |
          SIMPLETEST_BASE_URL=http://127.0.0.1:8080 SIMPLETEST_DB=mysql://root:root@127.0.0.1/drupal MINK_DRIVER_ARGS_WEBDRIVER='["chrome", {"browserName":"chrome","chromeOptions":{"args":["--disable-gpu","--headless"]}}, "http://localhost:4444/wd/hub"]' ./vendor/bin/phpunit -c phpunit.xml --testsuite=functional-javascript modules/ab_tests
